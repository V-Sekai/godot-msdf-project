[gd_resource type="VisualShader" load_steps=31 format=3 uid="uid://dbdbe2h10btxu"]

[sub_resource type="VisualShaderNodeFloatConstant" id="1"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatOp" id="2"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 1.0]
operator = 6

[sub_resource type="VisualShaderNodeFloatOp" id="3"]
output_port_for_preview = 0
operator = 7

[sub_resource type="VisualShaderNodeFloatOp" id="4"]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeFloatOp" id="5"]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeFloatOp" id="6"]
output_port_for_preview = 0
operator = 7

[sub_resource type="VisualShaderNodeVectorDecompose" id="7"]

[sub_resource type="VisualShaderNodeFloatOp" id="9"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.5]
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="10"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id="11"]
input_name = "texture_pixel_size"

[sub_resource type="VisualShaderNodeFloatOp" id="12"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.5]

[sub_resource type="VisualShaderNodeFloatFunc" id="13"]
output_port_for_preview = 0
function = 18

[sub_resource type="VisualShaderNodeInput" id="14"]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture" id="15"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="16"]
input_name = "texture"

[sub_resource type="VisualShaderNodeVectorDecompose" id="17"]

[sub_resource type="VisualShaderNodeVectorCompose" id="18"]

[sub_resource type="VisualShaderNodeFloatUniform" id="19"]
uniform_name = "PixelRangePlus4"

[sub_resource type="VisualShaderNodeFloatOp" id="20"]
default_input_values = [0, 0.0, 1, 4.0]

[sub_resource type="VisualShaderNodeFloatOp" id="21"]
operator = 7

[sub_resource type="VisualShaderNodeColorUniform" id="VisualShaderNodeColorUniform_bvmpo"]
uniform_name = "ColorUniform"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="22"]
operator = 2

[sub_resource type="VisualShaderNodeDotProduct" id="23"]

[sub_resource type="VisualShaderNodeVectorFunc" id="24"]
function = 6

[sub_resource type="VisualShaderNodeDerivativeFunc" id="25"]

[sub_resource type="VisualShaderNodeInput" id="26"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="27"]
operator = 3

[sub_resource type="VisualShaderNodeInput" id="28"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id="29"]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id="30"]
input_name = "color"

[resource]
code = "shader_type canvas_item;
uniform vec4 ColorUniform : hint_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform float PixelRangePlus4;



void fragment() {
// ColorUniform:34
	vec3 n_out34p0 = ColorUniform.rgb;
	float n_out34p1 = ColorUniform.a;



	vec3 n_out25p0;
	float n_out25p1;
// Texture2D:25
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, UV);
		n_out25p0 = TEXTURE_tex_read.rgb;
		n_out25p1 = TEXTURE_tex_read.a;
	}


// VectorDecompose:16
	float n_out16p0 = n_out25p0.x;
	float n_out16p1 = n_out25p0.y;
	float n_out16p2 = n_out25p0.z;


// FloatOp:15
	float n_out15p0 = min(n_out16p0, n_out16p1);


// FloatOp:14
	float n_out14p0 = max(n_out16p0, n_out16p1);


// FloatOp:12
	float n_out12p0 = min(n_out14p0, n_out16p2);


// FloatOp:13
	float n_out13p0 = max(n_out15p0, n_out12p0);


// FloatOp:32
	float n_out32p0 = min(n_out13p0, n_out25p1);


// FloatOp:18
	float n_in18p1 = 0.50000;
	float n_out18p0 = n_out32p0 - n_in18p1;


// FloatUniform:29
	float n_out29p0 = PixelRangePlus4;


// FloatOp:31
	float n_in31p1 = 4.00000;
	float n_out31p0 = n_out29p0 + n_in31p1;


// Input:2
	vec2 n_out2p0 = TEXTURE_PIXEL_SIZE;


// VectorOp:4
	vec3 n_out4p0 = vec3(n_out31p0) * vec3(n_out2p0, 0.0);


// FloatConstant:10
	float n_out10p0 = 0.500000;


// Input:8
	vec2 n_out8p0 = UV;


// DerivativeFunc:7
	float n_out7p0 = fwidth(dot(n_out8p0, vec2(0.333333, 0.333333)));


// VectorFunc:6
	vec3 n_out6p0 = abs(vec3(n_out7p0));


// VectorOp:9
	vec3 n_out9p0 = vec3(n_out10p0) / n_out6p0;


// VectorDecompose:27
	float n_out27p0 = n_out9p0.x;
	float n_out27p1 = n_out9p0.y;
	float n_out27p2 = n_out9p0.z;


// VectorCompose:28
	float n_in28p2 = 0.00000;
	vec3 n_out28p0 = vec3(n_out27p0, n_out27p1, n_in28p2);


// DotProduct:5
	float n_out5p0 = dot(n_out4p0, n_out28p0);


// FloatOp:11
	float n_in11p1 = 1.00000;
	float n_out11p0 = max(n_out5p0, n_in11p1);


// FloatOp:19
	float n_out19p0 = n_out18p0 * n_out11p0;


// FloatOp:20
	float n_in20p1 = 0.50000;
	float n_out20p0 = n_out19p0 + n_in20p1;


// FloatFunc:21
	float n_out21p0 = min(max(n_out20p0, 0.0), 1.0);


// Output:0
	COLOR.rgb = n_out34p0;
	COLOR.a = n_out21p0;


}
"
graph_offset = Vector2(-319.301, 39.3878)
mode = 1
flags/light_only = false
nodes/vertex/2/node = SubResource( "28" )
nodes/vertex/2/position = Vector2(200, 140)
nodes/vertex/3/node = SubResource( "29" )
nodes/vertex/3/position = Vector2(260, 220)
nodes/vertex/4/node = SubResource( "30" )
nodes/vertex/4/position = Vector2(220, 280)
nodes/fragment/0/position = Vector2(4060, 1720)
nodes/fragment/2/node = SubResource( "11" )
nodes/fragment/2/position = Vector2(-960, 2140)
nodes/fragment/4/node = SubResource( "22" )
nodes/fragment/4/position = Vector2(120, 2740)
nodes/fragment/5/node = SubResource( "23" )
nodes/fragment/5/position = Vector2(1960, 1820)
nodes/fragment/6/node = SubResource( "24" )
nodes/fragment/6/position = Vector2(120, 1800)
nodes/fragment/7/node = SubResource( "25" )
nodes/fragment/7/position = Vector2(-320, 1800)
nodes/fragment/8/node = SubResource( "26" )
nodes/fragment/8/position = Vector2(-960, 1900)
nodes/fragment/9/node = SubResource( "27" )
nodes/fragment/9/position = Vector2(600, 1740)
nodes/fragment/10/node = SubResource( "1" )
nodes/fragment/10/position = Vector2(-960, 1680)
nodes/fragment/11/node = SubResource( "2" )
nodes/fragment/11/position = Vector2(2360, 1760)
nodes/fragment/12/node = SubResource( "3" )
nodes/fragment/12/position = Vector2(1020, 3680)
nodes/fragment/13/node = SubResource( "4" )
nodes/fragment/13/position = Vector2(1500, 3620)
nodes/fragment/14/node = SubResource( "5" )
nodes/fragment/14/position = Vector2(600, 3680)
nodes/fragment/15/node = SubResource( "6" )
nodes/fragment/15/position = Vector2(600, 3120)
nodes/fragment/16/node = SubResource( "7" )
nodes/fragment/16/position = Vector2(120, 3120)
nodes/fragment/18/node = SubResource( "9" )
nodes/fragment/18/position = Vector2(2360, 3620)
nodes/fragment/19/node = SubResource( "10" )
nodes/fragment/19/position = Vector2(2780, 1720)
nodes/fragment/20/node = SubResource( "12" )
nodes/fragment/20/position = Vector2(3180, 1720)
nodes/fragment/21/node = SubResource( "13" )
nodes/fragment/21/position = Vector2(3600, 1760)
nodes/fragment/24/node = SubResource( "14" )
nodes/fragment/24/position = Vector2(-960, 2620)
nodes/fragment/25/node = SubResource( "15" )
nodes/fragment/25/position = Vector2(-320, 2240)
nodes/fragment/26/node = SubResource( "16" )
nodes/fragment/26/position = Vector2(-960, 2380)
nodes/fragment/27/node = SubResource( "17" )
nodes/fragment/27/position = Vector2(1020, 1820)
nodes/fragment/28/node = SubResource( "18" )
nodes/fragment/28/position = Vector2(1500, 1820)
nodes/fragment/29/node = SubResource( "19" )
nodes/fragment/29/position = Vector2(-960, 2840)
nodes/fragment/31/node = SubResource( "20" )
nodes/fragment/31/position = Vector2(-320, 2800)
nodes/fragment/32/node = SubResource( "21" )
nodes/fragment/32/position = Vector2(1960, 3620)
nodes/fragment/34/node = SubResource( "VisualShaderNodeColorUniform_bvmpo" )
nodes/fragment/34/position = Vector2(-960, 1160)
nodes/fragment/connections = PackedInt32Array(7, 0, 6, 0, 10, 0, 9, 0, 6, 0, 9, 1, 16, 0, 14, 0, 16, 1, 14, 1, 16, 2, 12, 1, 14, 0, 12, 0, 16, 0, 15, 0, 16, 1, 15, 1, 12, 0, 13, 1, 15, 0, 13, 0, 18, 0, 19, 0, 11, 0, 19, 1, 19, 0, 20, 0, 20, 0, 21, 0, 2, 0, 4, 1, 5, 0, 11, 0, 8, 0, 7, 0, 25, 0, 16, 0, 26, 0, 25, 2, 4, 0, 5, 0, 27, 0, 28, 0, 27, 1, 28, 1, 9, 0, 27, 0, 28, 0, 5, 1, 31, 0, 4, 0, 13, 0, 32, 0, 25, 1, 32, 1, 32, 0, 18, 0, 21, 0, 0, 1, 29, 0, 31, 0, 34, 0, 0, 0)
